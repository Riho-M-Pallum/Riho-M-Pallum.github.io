library(tidyverse)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(gganimate)
# Simulate normal data
set.seed(123)
data <- rnorm(100, mean = 5, sd = 2)
# Calculate Confidence Interval (Frequentist approach)
ci_mean <- mean(data)
ci_std_err <- sd(data) / sqrt(length(data))
conf_interval <- c(ci_mean - 1.96 * ci_std_err, ci_mean + 1.96 * ci_std_err)
# Simulate a Credible Interval (Bayesian approach using prior)
# Assume normal prior distribution with mean=0 and std=5
prior_mean <- 0
prior_std <- 5
post_mean <- (mean(data) / (2^2) + prior_mean / (prior_std^2)) / (1/(2^2) + 1/(prior_std^2))
post_std <- sqrt(1 / (1/(2^2) + 1/(prior_std^2)))
credible_interval <- c(post_mean - 1.96 * post_std, post_mean + 1.96 * post_std)
# Plot both intervals
df <- data.frame(
Type = c("Confidence Interval", "Credible Interval"),
Lower = c(conf_interval[1], credible_interval[1]),
Upper = c(conf_interval[2], credible_interval[2])
)
ggplot(df, aes(x = Type)) +
geom_errorbar(aes(ymin = Lower, ymax = Upper), width = 0.2, size = 1.2) +
geom_point(aes(y = Lower + (Upper - Lower)/2), size = 3, color = "blue") +
theme_minimal() +
labs(title = "Confidence Interval vs Credible Interval",
y = "Interval Range",
x = "")
# Create data for the three colored sections (top rectangle divided into thirds)
sections_data <- data.frame(
xmin = c(0.5, 1.5, 2.5),
x = c(1,2,3),
xmax = c(1.5, 2.5, 3.5),
ymin = rep(2.5, 3),  # Top rectangle's y-range (2.5 to 3.5)
ymax = rep(3.5, 3),
y = rep(3, 3),
color = c("lightblue", "lightgreen", "lightpink"),  # Different colors for each third
label = c("ISθ(1)", "ISθ(2)", "ISθ(3)")
)
# Create data for the numbers (bottom rectangle)
numbers_data <- data.frame(
x = c(1, 2, 3),    # x-coordinates for numbers (matching sections)
y = rep(1, 3),     # y-coordinate for all numbers (bottom of the plot)
label = c("{1}", "{2}", "{3}")  # Set notation for the numbers
)
# Create a data frame for the connections (lines)
lines_data <- data.frame(
x_start = c(1, 2, 3),
y_start = rep(3, 3),  # Starting y-coordinate for top sections
x_end = c(1, 2, 3),
y_end = rep(1, 3)     # Ending y-coordinate for numbers
)
# Create the plot
ggplot() +
# Add the three colored sections at the top (top rectangle divided into thirds)
geom_rect(data = sections_data, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = color),
color = "black") +
geom_text(data = sections_data, aes(x = x, y = y, label = label), vjust = -1, size = 5)+
annotate("text", x = 0.3, y = 3, label = expression(pi[theta ~ "|" ~ Y]), size = 6, fontface = "italic")+
annotate("text", x = 0.3, y = 2, label = expression(pi[theta ~ "|" ~ Y]), size = 6, fontface = "italic")+
annotate("text", x = 0.3, y = 1, label = expression(pi[phi ~ "|" ~ Y]), size = 6, fontface = "italic")+
# Add numbers for the bottom part
geom_text(data = numbers_data, aes(x = x, y = y, label = label), vjust = 1.5, size = 5) +
# Add lines connecting each section to its corresponding number
geom_segment(data = lines_data, aes(x = x_start, y = y_start, xend = x_end, yend = y_end),
linetype = "solid") +
annotate("text", x = 0.8, y = 2, label = expression(g^{-1} * "({" * 1 * "})"), size = 5, fontface = "italic")+
annotate("text", x = 1.8, y = 2, label = expression(g^{-1} * "({" * 2 * "})"), size = 5, fontface = "italic")+
annotate("text", x = 2.8, y = 2, label = expression(g^{-1} * "({" * 3 * "})"), size = 5, fontface = "italic")+
# Add a rectangle around the sections (top rectangle, theta)
geom_rect(aes(xmin = 0.5, xmax = 3.5, ymin = 2.5, ymax = 3.5),
color = "black", fill = NA, linetype = "solid") +
annotate("text", x = 3.7, y = 3, label = expression(Theta), size = 5, fontface = "bold") +
# Add a rectangle around the numbers (bottom rectangle, phi)
geom_rect(aes(xmin = 0.5, xmax = 3.5, ymin = 0.5, ymax = 1.5),
color = "black", fill = NA, linetype = "solid") +
annotate("text", x = 3.7, y = 1, label = expression(Phi), size = 5, fontface = "bold") +
# Set axis limits and remove axis labels
xlim(0, 4) + ylim(0, 4) +
scale_fill_identity() +  # Use the colors specified in the data
theme_void()  # Remove background, grid, and axes for a clean look
# Create the plot
ggplot() +
# Add the three colored sections at the top (top rectangle divided into thirds)
geom_rect(data = sections_data, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = color),
color = "black") +
geom_text(data = sections_data, aes(x = x, y = y, label = label), vjust = -1, size = 5)+
annotate("text", x = 0.3, y = 3, label = expression(pi[theta ~ "|" ~ Y]), size = 6, fontface = "italic")+
annotate("text", x = 0.3, y = 2, label = expression(pi[theta ~ "|" ~ phi]), size = 6, fontface = "italic")+
annotate("text", x = 0.3, y = 1, label = expression(pi[phi ~ "|" ~ Y]), size = 6, fontface = "italic")+
# Add numbers for the bottom part
geom_text(data = numbers_data, aes(x = x, y = y, label = label), vjust = 1.5, size = 5) +
# Add lines connecting each section to its corresponding number
geom_segment(data = lines_data, aes(x = x_start, y = y_start, xend = x_end, yend = y_end),
linetype = "solid") +
annotate("text", x = 0.8, y = 2, label = expression(g^{-1} * "({" * 1 * "})"), size = 5, fontface = "italic")+
annotate("text", x = 1.8, y = 2, label = expression(g^{-1} * "({" * 2 * "})"), size = 5, fontface = "italic")+
annotate("text", x = 2.8, y = 2, label = expression(g^{-1} * "({" * 3 * "})"), size = 5, fontface = "italic")+
# Add a rectangle around the sections (top rectangle, theta)
geom_rect(aes(xmin = 0.5, xmax = 3.5, ymin = 2.5, ymax = 3.5),
color = "black", fill = NA, linetype = "solid") +
annotate("text", x = 3.7, y = 3, label = expression(Theta), size = 5, fontface = "bold") +
# Add a rectangle around the numbers (bottom rectangle, phi)
geom_rect(aes(xmin = 0.5, xmax = 3.5, ymin = 0.5, ymax = 1.5),
color = "black", fill = NA, linetype = "solid") +
annotate("text", x = 3.7, y = 1, label = expression(Phi), size = 5, fontface = "bold") +
# Set axis limits and remove axis labels
xlim(0, 4) + ylim(0, 4) +
scale_fill_identity() +  # Use the colors specified in the data
theme_void()  # Remove background, grid, and axes for a clean look
flat_prior <- rep(1, 1000)/(9-4)
data <- data |> mutate(flat_prior = flat_prior)
data <- tibble() |> mutate(flat_prior = flat_prior)
colors <- c("Uniform distribution" = "green")
plot + # Vertical line for x (point on axis)
geom_segment(aes(x = 2, xend = 2, y = -2, yend = 2), color = "red", size = 1) +
# Vertical line for x + a (point on axis)
geom_segment(aes(x = 3, xend = 3, y = -2, yend = 2), color = "red", size = 1) +
annotate("text", x = 2.5, y = 2.5, label = "Hypothesis D [2,3]", size = 4, color = "red")+
geom_rect(aes(xmin = 4, xmax = 9, ymin = 0, ymax = 2), fill = "lightblue", alpha = 0.5, title = "Uniform") +
annotate("text", x = 8, y = 3, label = "Uniform distribution on the Identified set [4,9]", size = 5, color = "black")
set.seed(123)
# Simulate some data
x_values <- seq(4,9, length.out = 100)
crazy_values <- seq(0, 10, length.out = 100)
crazy_values <- crazy_values/sum(crazy_values)*100
truncated_normal <- dnorm(x_values, mean = 7, sd = 2)
truncated_normal <- truncated_normal/sum(truncated_normal)*100
# Create a data frame
data <- tibble(
x = x_values,
crazy_values = crazy_values,
truncated_normal_values = truncated_normal
)
plot <- data |> ggplot() +
# Main axis: horizontal line
geom_segment(aes(x = 0, xend = 12, y = 0, yend = 0), size = 1) +
# Vertical line for x (point on axis)
geom_segment(aes(x = 4, xend = 4, y = -2, yend = 2), color = "blue", size = 1) +
# Vertical line for x + a (point on axis)
geom_segment(aes(x = 9, xend = 9, y = -2, yend = 2), color = "blue", size = 1) +
# Text labels for x, a, and x + a
annotate("text", x = 4, y = -0.3, label = "x", color = "blue", size = 5, hjust = 1.5) +
annotate("text", x = 9, y = -0.3, label = "y", color = "blue", size = 5, hjust = -0.2) +
# Customize the plot: remove axis lines, ticks, and background
coord_cartesian(xlim = c(0, 12), ylim = c(-5, 5))
flat_prior <- rep(1, 100)/(9-4)
data <- data |> mutate(flat_prior = flat_prior)
colors <- c("Uniform distribution" = "green")
plot + # Vertical line for x (point on axis)
geom_segment(aes(x = 2, xend = 2, y = -2, yend = 2), color = "red", size = 1) +
# Vertical line for x + a (point on axis)
geom_segment(aes(x = 3, xend = 3, y = -2, yend = 2), color = "red", size = 1) +
annotate("text", x = 2.5, y = 2.5, label = "Hypothesis D [2,3]", size = 4, color = "red")+
geom_rect(aes(xmin = 4, xmax = 9, ymin = 0, ymax = 2), fill = "lightblue", alpha = 0.5, title = "Uniform") +
annotate("text", x = 8, y = 3, label = "Uniform distribution on the Identified set [4,9]", size = 5, color = "black")
